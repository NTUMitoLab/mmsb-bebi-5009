name: Build Jupyter Notebooks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  JULIA_NUM_THREADS: 2
  TIMEOUT: 600
  PYTHON_VER: '3.11'
  JOBS: '8'

jobs:
  execute:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python ${{ env.PYTHON_VER }}
        uses: actions/setup-python@v4
        id: python
        with:
          python-version: ${{ env.PYTHON_VER }}
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install -U nbconvert
      - name: Read Julia vesion
        uses: SebRollen/toml-action@v1.0.2
        id: read_toml
        with:
          file: 'Manifest.toml'
          field: 'julia_version'
      - name: Setup Julia ${{ steps.read_toml.outputs.value }}
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ steps.read_toml.outputs.value }}
      - name: Install Julia deps
        env:
          PYTHON: ${{ steps.python.outputs.python-path }}
        run: |
          julia --project="" -e 'import Pkg; Pkg.add("IJulia"); Pkg.build("IJulia")'
          julia --project=@. -e 'import Pkg; Pkg.instantiate()'
      - name: Build Notebooks
        run: |
          parallel --joblog /tmp/log -j${JOBS} jupyter nbconvert --to notebook --ExecutePreprocessor.timeout=${{ env.TIMEOUT }} --execute --inplace {} ::: docs/*.ipynb
          cat /tmp/log
      - name: Upload Notebooks
        uses: actions/upload-artifact@v3
        with:
          name: notebook
          path: docs/*.ipynb

  jupyter-book:
    needs: execute
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sosiristseng/docker-jupyterbook:latest
    # store success output flag for ci job
    outputs:
      success: ${{ steps.setoutput.outputs.success }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download notebooks
        uses: actions/download-artifact@v3
        with:
          path: out/
      - name: Move notebooks
        run: find out/ -type f -iname '*.ipynb' -exec mv -t docs/ {} +
      - name: Build website
        run: jupyter-book build docs/ -W -v
      - name: Set output flag
        id: setoutput
        run: echo "success=true" >> $GITHUB_OUTPUT
      - name: Upload pages artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v1
        with:
          path: docs/_build/html

  # This job is for GitHub status check
  # https://brunoscheufler.com/blog/2022-04-09-the-required-github-status-check-that-wasnt
  ci:
    needs: [execute, jupyter-book]
    runs-on: ubuntu-latest
    if: always() # always run, so we never skip the check
    steps:
      # pass step only when output of previous jupyter-book job is set
      # in case at least one of the execution fails, jupyter-book is skipped
      # and the output will not be set, which will then cause the ci job to fail
      - run: |
          passed="${{ needs.jupyter-book.outputs.success }}"
          if [[ $passed == "true" ]]; then
            echo "Tests passed"
            exit 0
          else
            echo "Tests failed"
            exit 1
          fi

# Deployment to GH pages
  deploy:
    needs: jupyter-book
    if: github.ref == 'refs/heads/main'
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

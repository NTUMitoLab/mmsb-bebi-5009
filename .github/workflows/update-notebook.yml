name: Auto update notebooks

env:
  JULIA_VERSION: "1.7"
  PYTHON_VERSION: "3.9"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 1 * *" # Every Month

jobs:
  update-notebook:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache Julia
        uses: julia-actions/cache@v1
      - name: cache Python
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup Julia ${{ env.JULIA_VERSION }}
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ env.JULIA_VERSION }}
      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install -r .jb/requirements.txt
      - name: Install IJulia
        env:
          PYTHON: python
        shell: julia --color=yes --threads=auto {0}
        run: |
          import Pkg
          Pkg.add(["IJulia", "PyPlot"])
          Pkg.build(["IJulia", "PyPlot"])
          import PyPlot
      - name: Update Julia dependencies
        env:
          PYTHON: python
        run: julia --color=yes --threads=auto --project=@. -e 'import Pkg; Pkg.update()'
      - name: Execute notebooks
        run: |
          find docs -type f -name "*.ipynb" -print0 | parallel -0 -j2 jupyter nbconvert --to notebook --ExecutePreprocessor.timeout=600 --ExecutePreprocessor.kernel_name=julia-${JULIA_VERSION} --execute --inplace {}
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
